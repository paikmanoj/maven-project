pipeline {

 agent any 
     stages {
     
            stage ('SCM checkout') {
                  steps {
                    git branch: 'master', url: 'https://github.com/chaitanyapratap19/maven-project.git'

                  }
            
            }
            
            
            stage ('Maven compile') {
           // agent {label 'maven'}
                  steps {
                    withMaven(jdk: 'JAVA_HOME', maven: 'MAVEN_HOME') {
                        sh 'mvn compile'
                   }

                  }
            
            }
            
            
             stage ('Maven test') {
                  steps {
                    withMaven(jdk: 'JAVA_HOME', maven: 'MAVEN_HOME') {
                        sh 'mvn test'
                   }

                  }
            
            }
            
            
            stage ('Maven Package') {
                  steps {
                    withMaven(jdk: 'JAVA_HOME', maven: 'MAVEN_HOME') {
                        sh 'mvn package'
                   }

                  }
            
            }
            
            
            
            stage ('Maven Install') {
                  steps {
                    withMaven(jdk: 'JAVA_HOME', maven: 'MAVEN_HOME') {
                        sh 'mvn clean install'
                   }

                  }
            
            }
            
          
            stage ('build && SonarQube analysis') {
                  steps {
                          withSonarQubeEnv('sonar') {
                                  // some block                                 
                                  
                                  withMaven(jdk: 'JAVA_HOME', maven: 'MAVEN_HOME') {
                                    sh 'mvn clean package sonar:sonar'
                                   }
                          }

                  }
            
            }
            
           
            
            
            
            stage ('deploy to tomcat') {
                steps {
                   sshagent (['172.31.43.210']) {
                  sh 'scp -o StrictHostKeyChecking=no */target/*.war ec2-user@172.31.43.210:/var/lib/tomcat/webapps'
                   }
             }
	
}	
            
            
            
            



     }


}
